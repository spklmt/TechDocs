{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.aaaaaaaa</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Spring/Docker/","title":"Docker","text":""},{"location":"Spring/Docker/#1-docker","title":"1. Docker \u57fa\u7840","text":""},{"location":"Spring/Docker/#11","title":"1.1 \u57fa\u672c\u7ec4\u6210","text":"<ul> <li>\u955c\u50cf\uff08image\uff09\uff1a\u53ea\u8bfb\u7684\u6a21\u677f\uff0c\u955c\u50cf\u53ef\u4ee5\u7528\u6765\u521b\u5efa Docker \u5bb9\u5668\uff0c\u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u521b\u5efa\u5f88\u591a\u5bb9\u5668</li> <li>\u5bb9\u5668\uff08container\uff09\uff1a\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u865a\u62df\u5316\u7684\u8fd0\u884c\u73af\u5883\uff0c\u5bb9\u5668\u662f\u7528\u955c\u50cf\u521b\u5efa\u7684\u8fd0\u884c\u5b9e\u4f8b</li> <li>\u4ed3\u5e93\uff08repository\uff09\uff1a\u96c6\u4e2d\u5b58\u653e\u955c\u50cf\u6587\u4ef6\u7684\u573a\u6240</li> </ul>"},{"location":"Spring/Docker/#12","title":"1.2 \u5de5\u4f5c\u539f\u7406","text":"<p>\u200b       Docker \u662f\u4e00\u4e2a Client-Server \u7ed3\u6784\u7684\u7cfb\u7edf\uff0cDocker \u4ee5 \u5b88\u62a4\u8fdb\u7a0b \u8fd0\u884c\u5728\u4e3b\u673a\u4e0a\uff0c \u7136\u540e\u901a\u8fc7 Socket \u8fde\u63a5 \u4ece\u5ba2\u6237\u7aef\u8bbf\u95ee\uff0c\u5b88\u62a4\u8fdb\u7a0b\u4ece\u5ba2\u6237\u7aef\u63a5\u53d7\u547d\u4ee4\u5e76\u7ba1\u7406\u8fd0\u884c\u5728\u4e3b\u673a\u4e0a\u7684\u5bb9\u5668\u3002 </p>"},{"location":"Spring/Docker/#13","title":"1.3 \u547d\u4ee4\u603b\u89c8","text":""},{"location":"Spring/Docker/#14","title":"1.4 \u5e2e\u52a9\u542f\u52a8\u7c7b\u547d\u4ee4","text":"<p>\u542f\u52a8 docker\uff1a<code>systemctl start docker</code></p> <p>\u5f00\u673a\u542f\u52a8\uff1a<code>systemctl enable docker</code></p> <p>\u505c\u6b62 docker\uff1a<code>systemctl stop docker</code></p> <p>\u91cd\u542f docker\uff1a<code>systemctl restart docker</code></p> <p>\u67e5\u770b docker \u72b6\u6001\uff1a<code>systemctl status docker</code></p> <p>\u67e5\u770b docker \u6982\u8981\u4fe1\u606f\uff1a<code>docker info</code></p> <p>\u67e5\u770b docker \u603b\u4f53\u5e2e\u52a9\u6587\u6863\uff1a<code>docker --help</code></p> <p>\u67e5\u770b docker \u547d\u4ee4\u5e2e\u52a9\u6587\u6863\uff1a<code>docker command --help</code></p>"},{"location":"Spring/Docker/#15","title":"1.5 \u955c\u50cf\u547d\u4ee4","text":"Command Description <code>docker image history</code> Show the history of an image <code>docker image import</code> Import the contents from a tarball to create a filesystem image <code>docker image inspect</code> Display detailed information on one or more images <code>docker image load</code> Load an image from a tar archive or STDIN <code>docker image ls</code> List images <code>docker image prune</code> Remove unused images <code>docker image pull</code> Download an image from a registry <code>docker image push</code> Upload an image to a registry <code>docker image rm</code> Remove one or more images <code>docker image save</code> Save one or more images to a tar archive (streamed to STDOUT by default) <code>docker image tag</code> Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE <p>\u5217\u51fa\u672c\u5730\u955c\u50cf\uff1a<code>docker images</code>\uff0c\uff08-a\uff0c\u5217\u51fa\u672c\u5730\u6240\u6709\u7684\u955c\u50cf\uff0c-q\uff0c\u53ea\u663e\u793a\u955c\u50cfID \uff09</p> <p>\u67e5\u627e\u955c\u50cf\uff1a<code>docker search image-name</code>\uff0c\uff08--limit N\uff0c\u5217\u51fa N \u4e2a\u955c\u50cf\uff09</p> <p>\u4e0b\u8f7d\u955c\u50cf\uff1a<code>docker pull image-name:TAG</code>\uff0c\uff08\u65e0 TAG \u9ed8\u8ba4\u4e0b\u8f7d latest\uff09</p> <p>\u5220\u9664\u955c\u50cf\uff1a<code>docker rmi image-id</code>\uff0c<code>docker rmi image-name1:TAG image-name2:TAG</code>\uff0c<code>docker rmi $(docker images -qa)</code>\uff0c\uff08-f \u5f3a\u5236\u5220\u9664\uff09</p> <p>\u67e5\u770b\u955c\u50cf/\u5bb9\u5668/\u6570\u636e\u5377\u6240\u5360\u7a7a\u95f4\uff1a<code>docker system df</code></p> <p>\u63d0\u4ea4\u955c\u50cf\uff1a<code>docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</code></p> <p>\u4e0a\u4f20\u955c\u50cf\uff1a<code>docker push [OPTIONS] NAME[:TAG]</code></p>"},{"location":"Spring/Docker/#16","title":"1.6 \u5bb9\u5668\u547d\u4ee4","text":"Command Description <code>docker container attach</code> Attach local standard input, output, and error streams to a running container <code>docker container commit</code> Create a new image from a container's changes <code>docker container cp</code> Copy files/folders between a container and the local filesystem <code>docker container create</code> Create a new container <code>docker container diff</code> Inspect changes to files or directories on a container's filesystem <code>docker container exec</code> Execute a command in a running container <code>docker container export</code> Export a container's filesystem as a tar archive <code>docker container inspect</code> Display detailed information on one or more containers <code>docker container kill</code> Kill one or more running containers <code>docker container logs</code> Fetch the logs of a container <code>docker container ls</code> List containers <code>docker container pause</code> Pause all processes within one or more containers <code>docker container port</code> List port mappings or a specific mapping for the container <code>docker container prune</code> Remove all stopped containers <code>docker container rename</code> Rename a container <code>docker container restart</code> Restart one or more containers <code>docker container rm</code> Remove one or more containers <code>docker container run</code> Create and run a new container from an image <code>docker container start</code> Start one or more stopped containers <code>docker container stats</code> Display a live stream of container(s) resource usage statistics <code>docker container stop</code> Stop one or more running containers <code>docker container top</code> Display the running processes of a container <code>docker container unpause</code> Unpause all processes within one or more containers <code>docker container update</code> Update configuration of one or more containers <code>docker container wait</code> Block until one or more containers stop, then print their exit codes <p>\u5217\u51fa\u5f53\u524d\u8fd0\u884c\u7684\u5bb9\u5668\uff1a<code>docker ps [OPTIONS]</code>\uff0c\uff08-a\uff0c\u5217\u51fa\u5f53\u524d\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668 + \u5386\u53f2\u4e0a\u8fd0\u884c\u8fc7\u7684\u5bb9\u5668\uff0c-l\uff0c\u663e\u793a\u6700\u8fd1\u521b\u5efa\u7684\u5bb9\u5668\uff0c-n\uff0c\u663e\u793a\u6700\u8fd1 n \u4e2a\u521b\u5efa\u7684\u5bb9\u5668\uff0c-q\uff0c\u9759\u9ed8\u6a21\u5f0f\uff0c\u53ea\u663e\u793a\u5bb9\u5668\u7f16\u53f7\uff09</p> <p>\u521b\u5efa\u5e76\u542f\u52a8\u5bb9\u5668\uff1a<code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</code>\uff0c\uff08-d\uff0c\u540e\u53f0\u8fd0\u884c\u5bb9\u5668\u5e76\u8fd4\u56de\u5bb9\u5668ID\uff0c-i\uff0c\u4ee5\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c-t\uff0c\u4e3a\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u4f2a\u8f93\u5165\u7ec8\u7aef\uff0c-P\uff0c\u968f\u673a\u7aef\u53e3\u6620\u5c04\uff0c-p\uff0c\u6307\u5b9a\u7aef\u53e3\u6620\u5c04\uff09</p> <p>\u542f\u52a8\u5bb9\u5668\uff1a<code>docker start container-id/container-name</code></p> <p>\u91cd\u542f\u5bb9\u5668\uff1a<code>docker restart container-id/container-name</code></p> <p>\u8fdb\u5165\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff1a</p> <ul> <li><code>docker exec -it container-id</code>\uff1a\u5728\u5bb9\u5668\u4e2d\u6253\u5f00\u65b0\u7684\u7ec8\u7aef\uff0c\u5e76\u4e14\u53ef\u4ee5\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b\uff0c\u7528 exit \u9000\u51fa\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u5bb9\u5668\u7684\u505c\u6b62</li> <li><code>docker attach container-id</code>\uff1a\u76f4\u63a5\u8fdb\u5165\u5bb9\u5668\u542f\u52a8\u547d\u4ee4\u7684\u7ec8\u7aef\uff0c\u4e0d\u4f1a\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b\uff0c\u7528 exit \u9000\u51fa\uff0c\u4f1a\u5bfc\u81f4\u5bb9\u5668\u7684\u505c\u6b62</li> </ul> <p>\u9000\u51fa\u5bb9\u5668\uff1a</p> <ul> <li><code>exit</code>\uff1aexit \u9000\u51fa\uff0c\u5bb9\u5668\u505c\u6b62</li> <li><code>ctrl + p + q</code>\uff1a\u5bb9\u5668\u4e0d\u505c\u6b62</li> </ul> <p>\u505c\u6b62\u5bb9\u5668\uff1a</p> <ul> <li>\u505c\u6b62\u5bb9\u5668\uff1a<code>docker stop container-id/container-name</code></li> <li>\u5f3a\u5236\u505c\u6b62\u5bb9\u5668\uff1a<code>docker kill container-id/container-name</code></li> </ul> <p>\u5220\u9664\u5bb9\u5668\uff1a</p> <ul> <li>\u5220\u9664\u5355\u4e2a\uff1a<code>docker rm container-id</code></li> <li>\u5220\u9664\u591a\u4e2a\uff1a<code>docker rm -f $(docker ps -a -q)</code>\uff1b<code>docker ps -a -q | xargs docker rm</code></li> </ul> <p>\u5bb9\u5668\u65e5\u5fd7\uff1a<code>docker logs container-id</code></p> <p>\u5bb9\u5668\u8fdb\u7a0b\uff1a<code>docker top container-id</code></p> <p>\u5bb9\u5668\u7ec6\u8282\uff1a<code>docker inspect container-id</code></p> <p>\u5bb9\u5668\u62f7\u8d1d\u6587\u4ef6\u5230\u4e3b\u673a\uff1a<code>docker cp container-id:\u5bb9\u5668\u8def\u5f84 \u4e3b\u673a\u8def\u5f84</code></p> <p>\u4e3b\u673a\u62f7\u8d1d\u6587\u4ef6\u5230\u5bb9\u5668\uff1a<code>docker cp \u4e3b\u673a\u8def\u5f84 container-id:\u5bb9\u5668\u8def\u5f84</code></p>"},{"location":"Spring/Docker/#17","title":"1.7 \u6570\u636e\u5377","text":"<p>\u200b       \u6570\u636e\u5377\u662f\u4e00\u4e2a\u53ef\u4f9b\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u4f7f\u7528\u7684\u7279\u6b8a\u76ee\u5f55\uff0c\u5b83\u7ed5\u8fc7 UnionFS\uff0c\u5728\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u548c\u91cd\u7528\uff0c\u5bf9\u6570\u636e\u5377\u7684\u4fee\u6539\u4f1a\u7acb\u9a6c\u751f\u6548\uff0c\u5bf9\u6570\u636e\u5377\u7684\u66f4\u65b0\uff0c\u4e0d\u4f1a\u5f71\u54cd\u955c\u50cf\uff0c\u6570\u636e\u5377\u9ed8\u8ba4\u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u5373\u4f7f\u5bb9\u5668\u88ab\u5220\u9664\u3002</p> Command Description <code>docker volume create</code> Create a volume <code>docker volume inspect</code> Display detailed information on one or more volumes <code>docker volume ls</code> List volumes <code>docker volume prune</code> Remove unused local volumes <code>docker volume rm</code> Remove one or more volumes <code>docker volume update</code> Update a volume (cluster volumes only) <ul> <li> <p>\u6dfb\u52a0\u5bb9\u5668\u5377\uff1a<code>-v [\u5bbf\u4e3b\u673a\u8def\u5f84\u6216\u5377\u540d]:[\u5bb9\u5668\u5185\u8def\u5f84]</code></p> </li> <li> <p>\u8bfb\u5199\u89c4\u5219\u6620\u5c04\u6dfb\u52a0\uff1a<code>-v [\u5bbf\u4e3b\u673a\u8def\u5f84\u6216\u5377\u540d]:[\u5bb9\u5668\u5185\u8def\u5f84]:[rw|ro]</code>\uff08\u8bfb\u5199/\u53ea\u8bfb\uff0c\u9ed8\u8ba4\u8bfb\u5199\uff09</p> </li> <li> <p>\u5377\u7684\u7ee7\u627f\u548c\u5171\u4eab\uff1a<code>--volumes-from &lt;\u5bb9\u5668\u540d\u6216ID&gt;</code></p> </li> </ul> <p>[\u6ce8] \u4e0d\u4f7f\u7528\u76ee\u5f55\u4ee5\u540d\u79f0\u5f00\u5934\u4f1a\u8bc6\u522b\u4e3a\u6570\u636e\u5377\u800c\u975e\u672c\u5730\u76ee\u5f55\uff0c\u4ec0\u4e48\u90fd\u4e0d\u6307\u5b9a\u521b\u5efa\u533f\u540d\u6570\u636e\u5377</p>"},{"location":"Spring/Docker/#18-dockerfile","title":"1.8 Dockerfile","text":""},{"location":"Spring/Docker/#181","title":"1.8.1 \u4fdd\u7559\u5b57\u6307\u4ee4","text":"<ul> <li>FROM\uff1a\u57fa\u7840\u955c\u50cf\uff0c\u5f53\u524d\u65b0\u955c\u50cf\u662f\u57fa\u4e8e\u54ea\u4e2a\u955c\u50cf\u7684\uff0c\u6307\u5b9a\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u955c\u50cf\u4f5c\u4e3a\u6a21\u677f\uff0c\u7b2c\u4e00\u6761\u5fc5\u987b\u662f <code>FROM</code></li> <li>MAINTAINER\uff1a\u955c\u50cf\u7ef4\u62a4\u8005\u7684\u59d3\u540d\u548c\u90ae\u7bb1\u5730\u5740</li> <li> <p>ADD\uff1a\u5c06\u5bbf\u4e3b\u673a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u62f7\u8d1d\u8fdb\u955c\u50cf\u4e14\u4f1a\u81ea\u52a8\u5904\u7406 <code>URL</code> \u548c \u89e3\u538b <code>tar</code> \u538b\u7f29\u5305</p> </li> <li> <p><code>ADD [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;perms&gt;] [--checksum=&lt;checksum&gt;] &lt;src&gt;... &lt;dest&gt;</code></p> </li> <li><code>ADD [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;perms&gt;] [\"&lt;src&gt;\",... \"&lt;dest&gt;\"]</code></li> <li> <p>COPY\uff1a\u62f7\u8d1d\u6587\u4ef6\u548c\u76ee\u5f55\u5230\u955c\u50cf\u4e2d\uff0c\u4ece\u6784\u5efa\u4e0a\u4e0b\u6587\u76ee\u5f55\uff08docker build \u6240\u5728\u8def\u5f84\uff09\u4e2d\u6e90\u8def\u5f84\u7684\u6587\u4ef6/\u76ee\u5f55\u590d\u5236\u76ee\u6807\u8def\u5f84\u4f4d\u7f6e</p> </li> <li> <p><code>COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;perms&gt;] &lt;src&gt;... &lt;dest&gt;</code></p> </li> <li> <p><code>COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;perms&gt;] [\"&lt;src&gt;\",... \"&lt;dest&gt;\"]</code></p> </li> <li> <p>RUN\uff1a\u5bb9\u5668\u6784\u5efa\u65f6\u9700\u8981\u8fd0\u884c\u7684\u547d\u4ee4</p> </li> <li> <p>shell \u683c\u5f0f\uff1a<code>RUN &lt;\u547d\u4ee4\u884c\u547d\u4ee4&gt;</code></p> </li> <li>exec \u683c\u5f0f\uff1a<code>RUN [\"\u53ef\u6267\u884c\u6587\u4ef6\", \"\u53c2\u65701\", \"\u53c2\u65702\"]</code></li> </ul> <ul> <li> <p>WORKDIR\uff1a\u6307\u5b9a\u5728\u521b\u5efa\u5bb9\u5668\u540e\uff0c\u7ec8\u7aef\u9ed8\u8ba4\u767b\u5f55\u8fdb\u6765\u7684\u5de5\u4f5c\u76ee\u5f55</p> </li> <li> <p>USER\uff1a\u6307\u5b9a\u8be5\u955c\u50cf\u4ee5\u4ec0\u4e48\u6837\u7684\u7528\u6237\u53bb\u6267\u884c\uff0c\u4e0d\u6307\u5b9a\u9ed8\u8ba4\u662f <code>root</code></p> </li> </ul> <ul> <li>CMD\uff1a\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u540e\u8fd0\u884c\u7684\u547d\u4ee4\u3002\u5982\u679c\u6709\u591a\u4e2a <code>CMD</code> \u6307\u4ee4\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u751f\u6548\u3002</li> <li>shell \u683c\u5f0f\uff1a<code>CMD command param1 param2</code> </li> <li>exec \u683c\u5f0f\uff1a<code>CMD [\"executable\",\"param1\",\"param2\"]</code></li> <li>\u4f5c\u4e3a <code>ENTRYPOINT</code> \u9ed8\u8ba4\u53c2\u6570\uff0cexec\u683c\u5f0f\uff1a<code>CMD [\"param1\",\"param2\"]</code></li> <li>ENV\uff1a\u7528\u6765\u5728\u6784\u5efa\u955c\u50cf\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf</li> <li> <p>EXPOSE\uff1a\u5f53\u524d\u5bb9\u5668\u5bf9\u5916\u66b4\u9732\u51fa\u7684\u7aef\u53e3</p> </li> <li> <p>VOLUME\uff1a\u5bb9\u5668\u6570\u636e\u5377\uff0c\u7528\u4e8e\u6570\u636e\u4fdd\u5b58\u548c\u6301\u4e45\u5316</p> </li> <li>ENTRYPOINT\uff1a\u7c7b\u4f3c <code>CMD</code> \u547d\u4ee4\uff0c\u4f46\u662f <code>ENTRYPOINT</code> \u4e0d\u4f1a\u88ab <code>docker run</code> \u540e\u9762\u7684\u547d\u4ee4\u8986\u76d6\uff0c\u8fd9\u4e9b\u547d\u4ee4\u884c\u53c2\u6570\u4f1a\u88ab\u5f53\u505a\u53c2\u6570\u4f20\u9012\u7ed9 <code>ENTRYPOINT</code> \u6307\u4ee4\u6307\u5b9a\u7684\u7a0b\u5e8f\uff08\u5373\u76f8\u5f53\u4e8e ENTRYPOINT \u548c CMD \u5e76\u7528\uff0cCMD \u7ed9 ENTRYPOINT \u4f20\u53c2\uff09\u3002\u5982\u679c\u6709\u591a\u4e2a <code>ENTRYPOINT</code> \u6307\u4ee4\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u751f\u6548\u3002</li> <li>shell\u683c\u5f0f\uff1a<code>ENTRYPOINT command param1 param2</code></li> <li>exec \u683c\u5f0f\uff1a<code>ENTRYPOINT [\"executable\", \"param1\", \"param2\"]</code></li> </ul>"},{"location":"Spring/Docker/#182","title":"1.8.2 \u4fdd\u7559\u5b57\u8fd0\u884c\u65f6\u673a","text":""},{"location":"Spring/Docker/#2-docker","title":"2. Docker \u7f51\u7edc","text":""},{"location":"Spring/Docker/#21","title":"2.1 \u57fa\u672c\u547d\u4ee4","text":"Command Description <code>docker network connect</code> Connect a container to a network <code>docker network create</code> Create a network <code>docker network disconnect</code> Disconnect a container from a network <code>docker network inspect</code> Display detailed information on one or more networks <code>docker network ls</code> List networks <code>docker network prune</code> Remove all unused networks <code>docker network rm</code> Remove one or more networks"},{"location":"Spring/Docker/#22","title":"2.2 \u7f51\u7edc\u6a21\u5f0f","text":"<p>bridge mode\uff1a\u4f7f\u7528 <code>--network bridge</code> \u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f7f\u7528 <code>docker0</code></p> <p>\u200b       Docker \u670d\u52a1\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u4e2a docker0 \u7f51\u6865\uff08\u5176\u4e0a\u6709\u4e00\u4e2a docker0 \u5185\u90e8\u63a5\u53e3\uff09\uff0c\u8be5\u6865\u63a5\u7f51\u7edc\u7684\u540d\u79f0\u4e3adocker0\uff0c\u5b83\u5728\u5185\u6838\u5c42\u8fde\u901a\u4e86\u5176\u4ed6\u7684\u7269\u7406\u6216\u865a\u62df\u7f51\u5361\uff0c\u8fd9\u5c31\u5c06\u6240\u6709\u5bb9\u5668\u548c\u672c\u5730\u4e3b\u673a\u90fd\u653e\u5230\u540c\u4e00\u4e2a\u7269\u7406\u7f51\u7edc\u3002Docker \u9ed8\u8ba4\u6307\u5b9a\u4e86 docker0 \u63a5\u53e3 \u7684 IP \u5730\u5740\u548c\u5b50\u7f51\u63a9\u7801\uff0c\u8ba9\u4e3b\u673a\u548c\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u7f51\u6865\u76f8\u4e92\u901a\u4fe1\u3002\uff08\u7f51\u6865\u7684 veth \u63a5\u53e3\u8fde\u63a5\u5bb9\u5668\u7684 eth0 \u7f51\u5361\uff09</p> <p>host mode\uff1a\u4f7f\u7528 <code>--network host</code> \u6307\u5b9a</p> <p>\u200b       \u5bb9\u5668\u5c06\u4e0d\u4f1a\u83b7\u5f97\u4e00\u4e2a\u72ec\u7acb\u7684 Network Namespace\uff0c \u800c\u662f\u548c\u5bbf\u4e3b\u673a\u5171\u7528\u4e00\u4e2a Network Namespace\u3002\u5bb9\u5668\u5c06\u4e0d\u4f1a\u865a\u62df\u51fa\u81ea\u5df1\u7684\u7f51\u5361\u800c\u662f\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684IP\u548c\u7aef\u53e3\u3002</p> <p>none mode\uff1a\u4f7f\u7528 <code>--network none</code> \u6307\u5b9a</p> <p>\u200b       \u7981\u7528\u7f51\u7edc\u529f\u80fd\uff0c\u53ea\u6709 lo \u6807\u8bc6\uff08\u5373127.0.0.1 \u8868\u793a\u672c\u5730\u56de\u73af\uff09</p> <p>container mode\uff1a\u4f7f\u7528 <code>--network container:container-name / container:container-id</code> \u6307\u5b9a</p> <p>\u200b       \u65b0\u5efa\u7684\u5bb9\u5668\u548c\u5df2\u7ecf\u5b58\u5728\u7684\u4e00\u4e2a\u5bb9\u5668\u5171\u4eab\u4e00\u4e2a\u7f51\u7edcip\u914d\u7f6e\u800c\u4e0d\u662f\u548c\u5bbf\u4e3b\u673a\u5171\u4eab\u3002\u65b0\u521b\u5efa\u7684\u5bb9\u5668\u4e0d\u4f1a\u521b\u5efa\u81ea\u5df1\u7684\u7f51\u5361\uff0c\u914d\u7f6e\u81ea\u5df1\u7684IP\uff0c\u800c\u662f\u548c\u4e00\u4e2a\u6307\u5b9a\u7684\u5bb9\u5668\u5171\u4eabIP\u3001\u7aef\u53e3\u8303\u56f4\u7b49\u3002\u540c\u6837\uff0c\u4e24\u4e2a\u5bb9\u5668\u9664\u4e86\u7f51\u7edc\u65b9\u9762\uff0c\u5176\u4ed6\u7684\u5982\u6587\u4ef6\u7cfb\u7edf\u3001\u8fdb\u7a0b\u5217\u8868\u7b49\u8fd8\u662f\u9694\u79bb\u7684\u3002</p>"},{"location":"Spring/Docker/#3-docker-compose","title":"3. Docker Compose","text":""},{"location":"Spring/Docker/#31","title":"3.1 \u5e38\u7528\u547d\u4ee4","text":"cmd func docker-compose -h \u67e5\u770b\u5e2e\u52a9 docker-compose up -d \uff08-d \u540e\u53f0\uff09\u542f\u52a8\u6240\u6709docker-compose\u670d\u52a1 docker-compose down \u505c\u6b62\u5e76\u5220\u9664\u5bb9\u5668\u3001\u7f51\u7edc\u3001\u5377\u3001\u955c\u50cf docker-compose restart \u91cd\u542f\u670d\u52a1 docker-compose start \u542f\u52a8\u670d\u52a1 docker-compose stop \u505c\u6b62\u670d\u52a1 docker-compose ps \u5c55\u793a\u5f53\u524d docker-compose \u7f16\u6392\u8fc7\u7684\u8fd0\u884c\u7684\u6240\u6709\u5bb9\u5668 docker-compose top \u5c55\u793a\u5f53\u524d docker-compose \u7f16\u6392\u8fc7\u7684\u5bb9\u5668\u8fdb\u7a0b docker-compose config \u68c0\u67e5\u914d\u7f6e docker-compose exec yml\u91cc\u9762\u7684\u670d\u52a1id \u8fdb\u5165\u5bb9\u5668\u5b9e\u4f8b\u5185\u90e8 docker-compose logs yml\u91cc\u9762\u7684\u670d\u52a1id \u67e5\u770b\u5bb9\u5668\u8f93\u51fa\u65e5\u5fd7"},{"location":"Spring/Docker/#4-docker","title":"4. Docker \u5bb9\u5668\u76d1\u63a7","text":"<ul> <li>CAdvisor\uff1a\u5bb9\u5668\u8d44\u6e90\u76d1\u63a7\u5de5\u5177,\u5305\u62ec\u5bb9\u5668\u7684\u5185\u5b58,CPU,\u7f51\u7edcIO,\u78c1\u76d8IO\u7b49\u76d1\u63a7,\u540c\u65f6\u63d0\u4f9b\u4e86\u4e00\u4e2aWEB\u9875\u9762\u7528\u4e8e\u67e5\u770b\u5bb9\u5668\u7684\u5b9e\u65f6\u8fd0\u884c\u72b6\u6001\u3002</li> <li>InfluxDB\uff1aInfluxDB\u662f\u4e00\u4e2a\u65f6\u5e8f\u6570\u636e\u5e93\uff0c\u4e13\u95e8\u7528\u4e8e\u5b58\u50a8\u65f6\u5e8f\u76f8\u5173\u6570\u636e\uff0c\u5f88\u9002\u5408\u5b58\u50a8CAdvisor\u7684\u6570\u636e\u3002</li> <li>Granfana\uff1a\u6570\u636e\u76d1\u63a7\u5206\u6790\u53ef\u89c6\u5316\u5e73\u53f0,\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90\u914d\u7f6e\u548c\u4e30\u5bcc\u7684\u63d2\u4ef6\u53ca\u6a21\u677f\u529f\u80fd,\u652f\u6301\u56fe\u8868\u6743\u9650\u63a7\u5236\u548c\u62a5\u8b66\u3002</li> </ul> <p>\u534f\u8c03\u5de5\u4f5c\uff1aCAdvisor \u8d1f\u8d23\u6536\u96c6\u5bb9\u5668\u7684\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6570\u636e\uff0cInfluxDB \u8d1f\u8d23\u5b58\u50a8\u65f6\u5e8f\u6570\u636e\uff0cGrafana \u8d1f\u8d23\u5206\u6790\u548c\u5c55\u793a\u65f6\u5e8f\u6570\u636e\u3002</p>"},{"location":"Spring/MyBatisPlus/","title":"MyBatisPlus","text":""},{"location":"Spring/MyBatisPlus/#1","title":"1.","text":""},{"location":"SpringCloud/Gateway/","title":"Gateway","text":""},{"location":"SpringCloud/Gateway/#1","title":"1. \u8def\u7531","text":""},{"location":"SpringCloud/Gateway/#11","title":"1.1 \u89c4\u5219\u914d\u7f6e","text":"<p>\u914d\u7f6e\u9879</p> <pre><code>@Validated\npublic class RouteDefinition {\n\n    private String id;\n\n    @NotEmpty\n    @Valid\n    private List&lt;PredicateDefinition&gt; predicates = new ArrayList&lt;&gt;();\n\n    @Valid\n    private List&lt;FilterDefinition&gt; filters = new ArrayList&lt;&gt;();\n\n    @NotNull\n    private URI uri;\n\n    private Map&lt;String, Object&gt; metadata = new HashMap&lt;&gt;();\n\n    private int order = 0; // \u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\n\n    // ...\n}\n</code></pre> <p>yml \u914d\u7f6e</p> <pre><code>spring:\n  cloud:\n    gateway:\n      routes:\n        - id: order-route\n          uri: lb://service-order\n          predicates:\n            - Path=/api/order/**\n        - id: product-route\n          uri: lb://service-product\n          predicates:\n            - Path=/api/product/**\n</code></pre>"},{"location":"SpringCloud/Gateway/#12","title":"1.2 \u5de5\u4f5c\u539f\u7406","text":""},{"location":"SpringCloud/Gateway/#2","title":"2. \u65ad\u8a00","text":""},{"location":"SpringCloud/Gateway/#21","title":"2.1 \u65ad\u8a00\u5de5\u5382","text":"<p>Spring Cloud Gateway \u5185\u7f6e\u591a\u79cd\u65ad\u8a00\u5de5\u5382\uff0c\u914d\u7f6e\u65ad\u8a00\u63d0\u4f9b\u957f\u77ed\u5199\u6cd5\uff0c\u77ed\u5199\u6cd5\u901a\u8fc7\u4f4d\u7f6e\u53c2\u6570\u7ed1\u5b9a\u5230\u65ad\u8a00\u5de5\u5382\u7684\u914d\u7f6e\u7c7b <code>Config</code>\uff0c\u957f\u5199\u6cd5\u662f\u901a\u8fc7\u663e\u5f0f\u6307\u5b9a\u53c2\u6570\u540d\u7684\u65b9\u5f0f\u7ed1\u5b9a\uff0c\u4e0d\u540c\u65ad\u8a00\u5de5\u5382\u914d\u7f6e\u7c7b\u8bbe\u7f6e\u7684\u53c2\u6570\u4e0d\u540c\u3002</p> <pre><code>spring:\n  cloud:\n    gateway:\n      routes:\n        - id: test_route\n          uri: http://example.org\n          predicates:\n            - Header=X-Token, .+\n\nspring:\n  cloud:\n    gateway:\n      routes:\n        - id: test_route\n          uri: http://example.org\n          predicates:\n            - name: Header\n              args:\n                header: X-Token\n                regexp: .+    \n</code></pre>"},{"location":"SpringCloud/Gateway/#22","title":"2.2 \u81ea\u5b9a\u4e49\u65ad\u8a00\u5de5\u5382","text":"<p>\u5de5\u5382\u540d <code>xxxRoutePredicateFactory</code> \u4f1a\u81ea\u52a8\u6ce8\u518c\u6210 <code>xxx</code></p> <pre><code>@Component\npublic class MyCustomRoutePredicateFactory extends AbstractRoutePredicateFactory&lt;VipRoutePredicateFactory.Config&gt; {\n\n    public MyCustomRoutePredicateFactory() {\n        super(Config.class);\n    }\n\n    @Override\n    public Predicate&lt;ServerWebExchange&gt; apply(Config config) {\n        return new GatewayPredicate() {\n            @Override\n            public boolean test(ServerWebExchange serverWebExchange) {\n                ServerHttpRequest request = serverWebExchange.getRequest();\n                String first = request.getQueryParams().getFirst(config.param);\n                return StringUtils.hasText(first) &amp;&amp; first.equals(config.value);\n            }\n        };\n    }\n\n    @Override\n    public List&lt;String&gt; shortcutFieldOrder() {\n        return Arrays.asList(\"param\", \"value\");\n    }\n\n    @Validated\n    @Data\n    public static class Config {\n        @NotEmpty\n        private String param;\n\n        @NotEmpty\n        private String value;\n    }\n}\n</code></pre> <pre><code>spring:\n  cloud:\n    gateway:\n      routes:\n        - id: custom_route\n          uri: http://localhost:8888\n          predicates:\n            - MyCustom=user,jack\n</code></pre>"},{"location":"SpringCloud/Gateway/#3","title":"3. \u8fc7\u6ee4\u5668","text":""},{"location":"SpringCloud/Gateway/#31","title":"3.1 \u8fc7\u6ee4\u5668\u5de5\u5382","text":"<p>Spring Cloud Gateway \u5185\u7f6e\u591a\u79cd\u8fc7\u6ee4\u5668\u5de5\u5382</p>"},{"location":"SpringCloud/Gateway/#32","title":"3.2 \u9ed8\u8ba4\u8fc7\u6ee4\u5668","text":"<p>\u4f7f\u7528 <code>spring.cloud.gateway.default-filters</code> \u4e3a\u6240\u6709\u8def\u7531\u6dfb\u52a0\u9ed8\u8ba4\u7684\u8fc7\u6ee4\u5668</p>"},{"location":"SpringCloud/Gateway/#33","title":"3.3 \u5168\u5c40\u8fc7\u6ee4\u5668","text":"<pre><code>@Slf4j\n@Component\npublic class CustomGlobalFilter implements GlobalFilter, Ordered {\n    // \u54cd\u5e94\u5f0f\u5f02\u6b65\n    @Override\n    public Mono&lt;Void&gt; filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n        log.info(\"custom global filter\");\n        String uri = exchange.getRequest().getURI().getPath();\n        long startTime = System.currentTimeMillis();\n        return chain.filter(exchange).doFinally(s -&gt; {\n            long endTime = System.currentTimeMillis();\n            log.info(\"request: {}, custom global filter time: {}\", uri, endTime - startTime);\n        });\n    }\n\n    @Override\n    public int getOrder() {\n        return -1;\n    }\n}\n</code></pre>"},{"location":"SpringCloud/Gateway/#34","title":"3.4 \u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u5de5\u5382","text":"<p>\u5de5\u5382\u540d <code>xxxRoutePredicateFactory</code> \u4f1a\u81ea\u52a8\u6ce8\u518c\u6210 <code>xxx</code></p> <pre><code>@Component\npublic class TokenGatewayFilterFactory extends AbstractNameValueGatewayFilterFactory {\n    @Override\n    public GatewayFilter apply(NameValueConfig config) {\n        return new GatewayFilter() {\n\n            @Override\n            public Mono&lt;Void&gt; filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n                return chain.filter(exchange).then(Mono.fromRunnable(() -&gt; {\n                    ServerHttpResponse response = exchange.getResponse();\n                    HttpHeaders headers = response.getHeaders();\n                    String value = config.getValue();\n\n                    if (\"uuid\".equals(value)) {\n                        value = UUID.randomUUID().toString();\n                    }\n\n                    headers.add(config.getName(), value);\n                }));\n            }\n        };\n    }\n}\n</code></pre> <pre><code>spring:\n  cloud:\n    gateway:\n      routes:\n        - id: product-route\n          uri: lb://service-product\n          predicates:\n            - Path=/api/product/**\n          filters:\n            - Token=X-Response-Token, uuid\n</code></pre>"},{"location":"SpringCloud/Gateway/#4","title":"4. \u5168\u5c40\u8de8\u57df","text":"<pre><code>spring:\n  cloud:\n    gateway:\n      globalcors:\n        cors-configurations:\n          '[/**]':\n            allowed-origin-patterns: '*'\n            allowed-headers: '*'\n            allowed-methods: '*'\n</code></pre>"},{"location":"SpringCloud/Gateway/#_1","title":"\u9762\u8bd5\u9898","text":""},{"location":"SpringCloud/Gateway/#1_1","title":"1. \u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u8c03\u7528\u7ecf\u8fc7\u7f51\u5173\u5417","text":"<p>\u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u8c03\u7528\u4e00\u822c\u4e0d\u7ecf\u8fc7\u7f51\u5173\uff0c\u4f46\u662f\u7f51\u5173\u4e5f\u662f\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u76f4\u63a5\u8bf7\u6c42\u7f51\u5173\u6765\u8c03\u7528\u76ee\u6807\u5fae\u670d\u52a1\uff0c\u4ece\u800c\u7ecf\u8fc7\u7f51\u5173\u3002</p>"},{"location":"SpringCloud/Nacos/","title":"Nacos","text":"<p>Nacos (Dynamic Naming and Configuration Service)\uff0c\u63d0\u4f9b\u52a8\u6001\u670d\u52a1\u53d1\u73b0\u3001\u914d\u7f6e\u7ba1\u7406\u548c\u670d\u52a1\u7ba1\u7406\u5e73\u53f0\u3002</p>"},{"location":"SpringCloud/Nacos/#1","title":"1. \u6ce8\u518c\u4e2d\u5fc3","text":""},{"location":"SpringCloud/Nacos/#11","title":"1.1 \u670d\u52a1\u6ce8\u518c","text":""},{"location":"SpringCloud/Nacos/#111","title":"1.1.1 \u914d\u7f6e\u6ce8\u518c\u4e2d\u5fc3","text":"<pre><code>spring:\n  application:\n    name: ${server-name}\n  cloud:\n    nacos:\n      discovery:\n        server-addr: ${ip:port}\n</code></pre>"},{"location":"SpringCloud/Nacos/#112","title":"1.1.2 \u5f00\u542f\u670d\u52a1\u6ce8\u518c/\u53d1\u73b0\u529f\u80fd","text":"<pre><code>@EnableDiscoveryClient\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n</code></pre> <p>[\u6ce8] \u5bfc\u5165 <code>spring-cloud-starter-alibaba-nacos-discovery</code> \u4f9d\u8d56</p>"},{"location":"SpringCloud/Nacos/#12","title":"1.2 \u670d\u52a1\u53d1\u73b0","text":""},{"location":"SpringCloud/Nacos/#121-discoveryclient","title":"1.2.1 DiscoveryClient","text":"<pre><code>@Autowired\nDiscoveryClient discoveryClient;\n\npublic interface DiscoveryClient extends Ordered {\n    // ...\n\n    List&lt;ServiceInstance&gt; getInstances(String serviceId);\n\n    List&lt;String&gt; getServices();\n\n    // ...\n}\n</code></pre>"},{"location":"SpringCloud/Nacos/#122-nacosservicediscovery","title":"1.2.2 NacosServiceDiscovery","text":"<pre><code>@Autowired\nNacosServiceDiscovery nacosServiceDiscovery;\n\npublic class NacosServiceDiscovery {\n    // ...\n\n    public List&lt;ServiceInstance&gt; getInstances(String serviceId) throws NacosException {\n        String group = this.discoveryProperties.getGroup();\n        List&lt;Instance&gt; instances = this.namingService().selectInstances(serviceId, group, true);\n        return hostToServiceInstanceList(instances, serviceId);\n    }\n\n    public List&lt;String&gt; getServices() throws NacosException {\n        String group = this.discoveryProperties.getGroup();\n        ListView&lt;String&gt; services = this.namingService().getServicesOfServer(1, Integer.MAX_VALUE, group);\n        return services.getData();\n    }\n\n    // ...\n}\n</code></pre>"},{"location":"SpringCloud/Nacos/#13","title":"1.3 \u8d1f\u8f7d\u5747\u8861","text":""},{"location":"SpringCloud/Nacos/#131-loadbalancerclient","title":"1.3.1 LoadBalancerClient","text":"<pre><code>@Autowired\nLoadBalancerClient loadBalancerClient;\n\n// \u8d1f\u8f7d\u5747\u8861\u9009\u62e9\u670d\u52a1\u5b9e\u4f8b\nloadBalancerClient.choose(\"${server-name}\");\n</code></pre>"},{"location":"SpringCloud/Nacos/#132","title":"1.3.2 \u6ce8\u89e3\u8d1f\u8f7d\u5747\u8861","text":"<pre><code>@Configuration\npublic class ServiceConfig {\n\n    // String url = \"http://${server-name}/api/\" \u8d1f\u8f7d\u5747\u8861\u9009\u62e9\u670d\u52a1\u5b9e\u4f8b\n    @LoadBalanced\n    @Bean\n    public RestTemplate restTemplate() {\n        return new RestTemplate();\n    }\n\n}\n</code></pre> <p>[\u6ce8] \u5bfc\u5165 <code>spring-cloud-starter-loadbalancer</code> \u4f9d\u8d56</p>"},{"location":"SpringCloud/Nacos/#2","title":"2. \u914d\u7f6e\u4e2d\u5fc3","text":""},{"location":"SpringCloud/Nacos/#21","title":"2.1 \u914d\u7f6e","text":"<pre><code>spring:\n  application:\n    name: service-product\n  profiles:\n    active: dev\n  cloud:\n    nacos:\n      server-addr: 127.0.0.1:8848\n      config:\n        namespace: ${spring.profiles.active:public}\n        import-check:\n          enabled: false\n\n---\nspring:\n  config:\n    import:\n      - nacos:config1.yaml?group=group1\n      - nacos:config2.yaml?group=group1\n    activate:\n      on-profile: dev\n---\nspring:\n  config:\n    import:\n      - nacos:config1.yaml?group=group1\n      - nacos:config2.yaml?group=group1\n      - nacos:config3.yaml?group=group1\n    activate:\n      on-profile: prod\n</code></pre> <p>[\u6ce8] \u5bfc\u5165 <code>spring-cloud-starter-alibaba-nacos-config</code> \u4f9d\u8d56</p>"},{"location":"SpringCloud/Nacos/#22","title":"2.2 \u52a8\u6001\u5237\u65b0","text":"<p>\u52a0\u8f7d\u52a8\u6001\u914d\u7f6e</p>"},{"location":"SpringCloud/Nacos/#221-refreshscope","title":"2.2.1 @RefreshScope","text":"<pre><code>@RefreshScope\n@RestController\npublic class DemoController {\n\n    @Value(\"${test.timeout}\")\n    String timeout;\n}\n</code></pre>"},{"location":"SpringCloud/Nacos/#222-configurationproperties","title":"2.2.2 ConfigurationProperties","text":"<pre><code>@Component\n@ConfigurationProperties(prefix = \"test\") // \u914d\u7f6e\u6279\u91cf\u7ed1\u5b9a, \u2f46\u9700 @RefreshScope \u5b9e\u73b0\u2f83\u52a8\u5237\u65b0\n@Data\npublic class DemoProperties {\n    String timeout;\n}\n\n@RestController\npublic class DemoController {\n\n    @Autowired\n    DemoProperties demoProperties;\n}\n</code></pre>"},{"location":"SpringCloud/Nacos/#23-nacosconfigmanager","title":"2.3 NacosConfigManager","text":"<pre><code>@EnableDiscoveryClient\n@SpringBootApplication\npublic class OrderMainApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(OrderMainApplication.class, args);\n    }\n\n    // \u76d1\u542c\u914d\u7f6e\u6587\u4ef6\n    @Bean\n    ApplicationRunner applicationRunner(NacosConfigManager nacosConfigManager) {\n        return args -&gt; {\n            ConfigService configService = nacosConfigManager.getConfigService();\n            configService.addListener(\"service-test.yaml\", \"DEFAULT_GROUP\", new Listener() {\n\n                @Override\n                public Executor getExecutor() {\n                    return Executors.newFixedThreadPool(4);\n                }\n\n                @Override\n                public void receiveConfigInfo(String configInfo) {\n                    System.out.println(\"configInfo:\" + configInfo);\n                }\n            });\n        };\n    }\n}\n</code></pre>"},{"location":"SpringCloud/Nacos/#24-namespace-dataid-group","title":"2.4 namespace, dataId, group","text":""},{"location":"SpringCloud/Nacos/#241-namespace","title":"2.4.1 namespace","text":"<p>\u547d\u540d\u7a7a\u95f4\uff1a\u5b9e\u73b0\u591a\u73af\u5883\u9694\u79bb\uff08local, development, test, beta, production\uff09</p>"},{"location":"SpringCloud/Nacos/#242-dataid","title":"2.4.2 dataId","text":"<p>\u6570\u636e\u96c6id\uff1a\u914d\u7f6e\u6587\u4ef6\uff08name.suffix\uff09</p>"},{"location":"SpringCloud/Nacos/#243-groupid","title":"2.4.3 groupId","text":"<p>\u5206\u7ec4id\uff1a\u4e00\u822c\u4ee5\u5fae\u670d\u52a1\u540d\u5b57\u4f5c\u4e3a\u5206\u7ec4\u3002</p>"},{"location":"SpringCloud/Nacos/#_1","title":"\u9762\u8bd5\u9898","text":""},{"location":"SpringCloud/Nacos/#1_1","title":"1. \u5982\u679c\u6ce8\u518c\u4e2d\u5fc3\u5b95\u673a\uff0c\u8fdc\u7a0b\u8c03\u7528\u662f\u5426\u53ef\u4ee5\u6210\u529f\uff1f","text":"<ul> <li> <p>\u670d\u52a1\u4ece\u672a\u8c03\u7528\u8fc7\u6ce8\u518c\u4e2d\u5fc3\uff0c\u7acb\u5373\u5931\u8d25\uff1a<code>com.alibaba.nacos.api.exception.NacosException: Client not connected, current status:UNHEALTHY</code></p> </li> <li> <p>\u670d\u52a1\u8c03\u7528\u8fc7\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6ce8\u518c\u4e2d\u5fc3\u5b95\u673a\uff0c\u5b9e\u4f8b\u672a\u5b95\u673a\uff0c\u670d\u52a1\u6839\u636e\u7f13\u5b58\u5b9e\u4f8b\u540d\u5355\uff0c\u8c03\u7528\u6210\u529f</p> </li> <li>\u670d\u52a1\u8c03\u7528\u8fc7\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6ce8\u518c\u4e2d\u5fc3\u548c\u5b9e\u4f8b\u90fd\u5b95\u673a\uff0c\u670d\u52a1\u6839\u636e\u7f13\u5b58\u5b9e\u4f8b\u540d\u5355\uff0c\u8c03\u7528\u5931\u8d25\uff1a<code>java.net.ConnectException: Connection refused: connect</code></li> </ul>"},{"location":"SpringCloud/OpenFeign/","title":"OpenFeign","text":"<p>Spring Cloud \u7684\u58f0\u660e\u5f0f REST \u5ba2\u6237\u7aef\u3002</p>"},{"location":"SpringCloud/OpenFeign/#1","title":"1. \u8fdc\u7a0b\u8c03\u7528","text":""},{"location":"SpringCloud/OpenFeign/#11","title":"1.1 \u5f00\u542f\u529f\u80fd","text":"<pre><code>@SpringBootApplication\n@EnableFeignClients\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n</code></pre> <p>[\u6ce8] \u5bfc\u5165 <code>spring-cloud-starter-openfeign</code> \uff0c<code>spring-cloud-starter-loadbalancer</code> \u4f9d\u8d56\uff0c\u81ea\u52a8\u8d1f\u8f7d\u5747\u8861</p>"},{"location":"SpringCloud/OpenFeign/#12-api","title":"1.2 \u8c03\u7528\u5fae\u670d\u52a1API","text":"<pre><code>@FeignClient(value = \"service-product\") // \u8c03\u7528\u65b9\u5fae\u670d\u52a1\u81ea\u52a8\u8d1f\u8f7d\u5747\u8861\npublic interface ProductFeignClient {\n    @GetMapping(\"/product/{id}\")\n    Product getProduct(@PathVariable(\"id\") Long productId);\n}\n</code></pre> <p>[\u6ce8] OpenFeign \u4f7f\u7528 Loadbalancer \u5b9e\u73b0\u81ea\u52a8\u8d1f\u8f7d\u5747\u8861\u3002\uff08\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\uff09</p>"},{"location":"SpringCloud/OpenFeign/#13-api","title":"1.3 \u8c03\u7528\u7b2c\u4e09\u65b9API","text":"<pre><code>@FeignClient(value = \"weather-client\", url=\"http://weather.com\") // \u7b2c\u4e09\u65b9\u8d1f\u8d23\u8d1f\u8f7d\u5747\u8861\npublic interface WeatherFeignClient {\n\n    @PostMapping(\"/api/weather\")\n    String getWeather(@RequestHeader(\"Authorization\") String auth,\n                      @RequestParam(\"token\") String token,\n                      @RequestParam(\"cityId\") String cityId);\n}\n</code></pre> <p>[\u6ce8] \u8c03\u7528\u7b2c\u4e09\u65b9 API \u63a5\u53e3\uff0c\u7531\u7b2c\u4e09\u65b9\u8d1f\u8d23\u8d1f\u8f7d\u5747\u8861\u3002\uff08\u670d\u52a1\u7aef\u8d1f\u8f7d\u5747\u8861\uff09</p>"},{"location":"SpringCloud/OpenFeign/#2","title":"2. \u65e5\u5fd7","text":""},{"location":"SpringCloud/OpenFeign/#21","title":"2.1 \u57fa\u4e8e\u914d\u7f6e\u7c7b","text":""},{"location":"SpringCloud/OpenFeign/#211","title":"2.1.1 \u5168\u5c40\u914d\u7f6e","text":"<pre><code>@Configuration\npublic class FeignConfig {\n    @Bean\n    public Logger.Level feignLoggerLevel() {\n        return Logger.Level.FULL;\n    }\n}\n</code></pre>"},{"location":"SpringCloud/OpenFeign/#212","title":"2.1.2 \u5c40\u90e8\u914d\u7f6e","text":"<pre><code>// \u4e0d\u8bbe\u7f6e @Configuration \u6ce8\u89e3\npublic class FeignConfig {\n    @Bean\n    public Logger.Level feignLoggerLevel() {\n        return Logger.Level.FULL;\n    }\n}\n\n// \u5bfc\u5165 configuration \n@FeignClient(value = \"service-product\", configuration = FeignConfig.class)\npublic interface ProductFeignClient {\n    // ...\n}\n</code></pre> <p>[\u6ce8] \u8bbe\u7f6e <code>logging.level.com.example.order.feign=debug</code></p>"},{"location":"SpringCloud/OpenFeign/#22","title":"2.2 \u57fa\u4e8e\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>spring:\n  application:\n    name: service-order\n  cloud:\n    openfeign:\n      client:\n        config:\n          default:  # \u5168\u5c40\u914d\u7f6e\n            loggerLevel: NONE\n          service-product:  # \u5c40\u90e8\u914d\u7f6e\n            loggerLevel: FULL\n\nlogging:\n  level:\n    com.example.order.feign: debug\n</code></pre>"},{"location":"SpringCloud/OpenFeign/#3","title":"3. \u8d85\u65f6\u63a7\u5236","text":"<p>\u6d41\u7a0b\uff1a\u5efa\u7acb\u8fde\u63a5\uff08\u8fde\u63a5\u8d85\u65f6\uff09 -&gt; \u53d1\u9001\u8bf7\u6c42 -&gt; \u5904\u7406\u4e1a\u52a1 -&gt; \u8fd4\u56de\u6570\u636e\uff08\u8bfb\u53d6\u8d85\u65f6\uff09</p> <pre><code>spring:\n    cloud:\n        openfeign:\n            client:\n                config:\n                    default: # \u9ed8\u8ba4\u914d\u7f6e, \u53ef\u81ea\u5b9a\u4e49 name, value, contextId\n                        connectTimeout: 5000\n                        readTimeout: 5000\n</code></pre> <p>[\u6ce8] \u591a\u4e2a FeignClient \u63a5\u53e3\u8c03\u7528\u76f8\u540c\u670d\u52a1\u63d0\u4f9b\u8005 (name, vluae\u76f8\u540c)\uff0c\u4f7f\u7528 contextId \u552f\u4e00\u6807\u8bc6 FeignClient </p>"},{"location":"SpringCloud/OpenFeign/#4","title":"4. \u91cd\u8bd5\u673a\u5236","text":"<pre><code>@Bean\nRetryer retryer() {\n    return new Retryer.Default();\n}\n</code></pre>"},{"location":"SpringCloud/OpenFeign/#5","title":"5. \u62e6\u622a\u5668","text":""},{"location":"SpringCloud/OpenFeign/#51","title":"5.1 \u8bf7\u6c42\u62e6\u622a\u5668","text":""},{"location":"SpringCloud/OpenFeign/#511","title":"5.1.1 \u57fa\u4e8e\u914d\u7f6e\u7c7b","text":"<pre><code>@Component\npublic class CustomRequestInterceptor implements RequestInterceptor {\n\n    @Override\n    public void apply(RequestTemplate requestTemplate) {\n\n    }\n}\n</code></pre> <pre><code>// \u4e0d\u8bbe\u7f6e @Configuration \u6ce8\u89e3\npublic class FeignConfig implements RequestInterceptor {\n    @Override\n    public void apply(RequestTemplate requestTemplate) {\n        System.out.println(\"feignConfig\");\n    }\n}\n\n// \u5bfc\u5165 configuration \n@FeignClient(value = \"service-product\", configuration = FeignConfig.class)\npublic interface ProductFeignClient {\n    // ...\n}\n</code></pre>"},{"location":"SpringCloud/OpenFeign/#512","title":"5.1.2 \u57fa\u4e8e\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>spring:\n  application:\n    name: service-order\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 127.0.0.1:8848\n      config:\n        import-check:\n          enabled: false\n    openfeign:\n      client:\n        config:\n          default: # \u5168\u5c40\n            request-interceptors:\n              - com.example.order.interceptor.CustomRequestInterceptor              \n          service-product:\n            request-interceptors: #\u5c40\u90e8\n              - com.example.order.interceptor.CustomRequestInterceptor\n</code></pre>"},{"location":"SpringCloud/OpenFeign/#52","title":"5.2 \u54cd\u5e94\u62e6\u622a\u5668","text":""},{"location":"SpringCloud/OpenFeign/#6","title":"6. \u515c\u5e95\u8fd4\u56de","text":"<p>Fallback\uff1a\u515c\u5e95\u8fd4\u56de\uff0c\u9700\u8981\u6574\u5408 Sentinel \u5b9e\u73b0</p> <pre><code>@Component\npublic class ProductFeignClientFallback implements ProductFeignClient {\n    @Override\n    public Product getProduct(Long productId) {\n        Product product = new Product();\n        product.setId(1L);\n        product.setProductName(\"fallback\");\n        product.setPrice(new BigDecimal(\"5.0\"));\n        return product;\n    }\n}\n\n@FeignClient(value = \"service-product\", fallback = ProductFeignClientFallback.class)\npublic interface ProductFeignClient {\n    @GetMapping(\"/product/{id}\")\n    Product getProduct(@PathVariable(\"id\") Long productId);\n}\n</code></pre> <pre><code>feign:\n  sentinel:\n    enabled: true # \u7194\u65ad\u529f\u80fd\n</code></pre> <p>[\u6ce8] \u5bfc\u5165 <code>spring-cloud-starter-alibaba-sentinel</code> \u4f9d\u8d56</p>"},{"location":"SpringCloud/Seata/","title":"Seata","text":""},{"location":"SpringCloud/Seata/#1","title":"1. \u67b6\u6784\u539f\u7406","text":"<p>TC (Transaction Coordinator) \u4e8b\u52a1\u534f\u8c03\u8005</p> <p>\u7ef4\u62a4\u5168\u5c40\u548c\u5206\u652f\u4e8b\u52a1\u7684\u72b6\u6001\uff0c\u9a71\u52a8\u5168\u5c40\u4e8b\u52a1\u63d0\u4ea4\u6216\u56de\u6eda\u3002</p> <p>TM (Transaction Manager) \u4e8b\u52a1\u7ba1\u7406\u5668</p> <p>\u5b9a\u4e49\u5168\u5c40\u4e8b\u52a1\u7684\u8303\u56f4\uff1a\u5f00\u59cb\u5168\u5c40\u4e8b\u52a1\u3001\u63d0\u4ea4\u6216\u56de\u6eda\u5168\u5c40\u4e8b\u52a1\u3002</p> <p>RM(Resource Manager) \u8d44\u6e90\u7ba1\u7406\u5668</p> <p>\u7ba1\u7406\u5206\u652f\u4e8b\u52a1\u5904\u7406\u7684\u8d44\u6e90\uff0c\u4e0e TC \u4ea4\u8c08\u4ee5\u6ce8\u518c\u5206\u652f\u4e8b\u52a1\u548c\u62a5\u544a\u5206\u652f\u4e8b\u52a1\u7684\u72b6\u6001\uff0c\u5e76\u9a71\u52a8\u5206\u652f\u4e8b\u52a1\u63d0\u4ea4\u6216\u56de\u6eda\u3002</p>"},{"location":"SpringCloud/Seata/#2","title":"2. \u4e8c\u9636\u6bb5\u9501\u534f\u8bae","text":"<p>\u4e8c\u9636\u6bb5\u9501\u534f\u8bae\uff08Two-Phase Locking\uff0c2PL\uff09\uff0c\u5e38\u89c1\u5e76\u53d1\u63a7\u5236\u673a\u5236\uff0c\u7528\u4e8e\u4fdd\u8bc1\u4e8b\u52a1\u7684\u53ef\u4e32\u884c\u5316\uff0c\u4e00\u822c\u7528\u4e8e\u5355\u8282\u70b9\u5e76\u53d1\u63a7\u5236\u534f\u8bae\u3002</p>"},{"location":"SpringCloud/Seata/#21-growing-phase","title":"2.1 \u52a0\u9501\u9636\u6bb5\uff08Growing Phase\uff09","text":"<p>\u4e8b\u52a1\u53ef\u4ee5\u7533\u8bf7\u65b0\u7684\u9501\uff08\u8bfb/\u5199\u9501\uff0c\u52a0\u9501\u64cd\u4f5c\u5728\u8bfb/\u5199\u6570\u636e\u4e4b\u524d\u5b8c\u6210\uff09\uff0c\u4e0d\u80fd\u91ca\u653e\u4efb\u4f55\u5df2\u7ecf\u6301\u6709\u7684\u9501</p>"},{"location":"SpringCloud/Seata/#22-shrinking-phase","title":"2.2 \u89e3\u9501\u9636\u6bb5\uff08Shrinking Phase\uff09","text":"<p>\u4e8b\u52a1\u91ca\u653e\u4e86\u4efb\u610f\u4e00\u4e2a\u9501\uff0c\u4e0d\u80fd\u518d\u7533\u8bf7\u65b0\u9501</p>"},{"location":"SpringCloud/Seata/#3","title":"3. \u4e8c\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae","text":"<p>\u4e8c\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\uff08Two-Phase Commit Protocol\uff0c2PC\uff09\u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u7528\u4e8e\u786e\u4fdd\u591a\u4e2a\u53c2\u4e0e\u8282\u70b9\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d \u8981\u4e48\u5168\u90e8\u63d0\u4ea4\uff0c\u8981\u4e48\u5168\u90e8\u56de\u6eda\uff0c\u4e00\u822c\u7528\u4e8e\u89e3\u51b3\u8de8\u8282\u70b9\u4e00\u81f4\u6027\u534f\u8bae\u3002</p>"},{"location":"SpringCloud/Seata/#31-prepare","title":"3.1 \u51c6\u5907\u9636\u6bb5\uff08Prepare\uff09","text":"<ol> <li> <p>\u534f\u8c03\u8005\u5411\u6240\u6709\u53c2\u4e0e\u8005\u53d1\u9001 prepare \u8bf7\u6c42</p> </li> <li> <p>\u6bcf\u4e2a\u53c2\u4e0e\u8005\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> </li> <li> <p>\u8fdb\u884c\u672c\u5730\u4e8b\u52a1\u7684\u9884\u6267\u884c\uff08\u4e0d\u63d0\u4ea4\uff09</p> </li> <li> <p>\u5199\u5165 undo log / redo log\uff0c\u786e\u4fdd\u53ef\u4ee5\u56de\u6eda\u6216\u6062\u590d</p> </li> <li> <p>\u5982\u679c\u6267\u884c\u6210\u529f\uff0c\u8fd4\u56de Yes \u7ed9\u534f\u8c03\u8005\uff1b\u5982\u679c\u5931\u8d25\uff0c\u8fd4\u56de No</p> </li> <li> <p>\u534f\u8c03\u8005\u6536\u96c6\u6240\u6709\u53c2\u4e0e\u8005\u7684\u54cd\u5e94</p> </li> </ol>"},{"location":"SpringCloud/Seata/#32-commit","title":"3.2 \u63d0\u4ea4\u9636\u6bb5\uff08Commit\uff09","text":"<ol> <li>\u54cd\u5e94\u5168\u4e3a Yes</li> <li>\u534f\u8c03\u8005\u5411\u6240\u6709\u53c2\u4e0e\u8005\u53d1\u9001 commit \u8bf7\u6c42</li> <li>\u53c2\u4e0e\u8005\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\u5e76\u91ca\u653e\u8d44\u6e90</li> <li>\u5411\u534f\u8c03\u8005\u8fd4\u56de\u63d0\u4ea4\u6210\u529f\u7684\u786e\u8ba4</li> <li>\u54cd\u5e94\u5168\u4e3a No \u6216 \u8d85\u65f6</li> <li>\u534f\u8c03\u8005\u5411\u6240\u6709\u53c2\u4e0e\u8005\u53d1\u9001 rollback \u8bf7\u6c42</li> <li>\u5404\u53c2\u4e0e\u8005\u6839\u636e undo log \u56de\u6eda</li> <li>\u8fd4\u56de\u56de\u6eda\u786e\u8ba4</li> </ol>"},{"location":"SpringCloud/Seata/#4","title":"4. \u56db\u79cd\u4e8b\u7269\u6a21\u5f0f","text":""},{"location":"SpringCloud/Seata/#41-seata-at","title":"4.1 Seata AT \u6a21\u5f0f","text":""},{"location":"SpringCloud/Seata/#42-seata-tcc","title":"4.2 Seata TCC \u6a21\u5f0f","text":""},{"location":"SpringCloud/Seata/#43-seata-saga","title":"4.3 Seata Saga \u6a21\u5f0f","text":""},{"location":"SpringCloud/Seata/#44-seata-xa","title":"4.4 Seata XA \u6a21\u5f0f","text":""},{"location":"SpringCloud/Sentinel/","title":"Sentinel","text":"<p>\u9762\u5411\u5206\u5e03\u5f0f\u3001\u591a\u8bed\u8a00\u5f02\u6784\u5316\u670d\u52a1\u67b6\u6784\u7684\u6d41\u91cf\u6cbb\u7406\u7ec4\u4ef6\u3002</p>"},{"location":"SpringCloud/Sentinel/#1","title":"1. \u5de5\u4f5c\u539f\u7406","text":"<ol> <li>\u5b9a\u4e49\u8d44\u6e90\uff08\u7f16\u7a0b\u5f0f <code>SphU API</code>\uff0c\u58f0\u660e\u5f0f <code>@SentinelResource</code>\uff09</li> <li>\u5b9a\u4e49\u89c4\u5219</li> <li>\u68c0\u9a8c\u89c4\u5219\u662f\u5426\u751f\u6548</li> </ol>"},{"location":"SpringCloud/Sentinel/#2","title":"2. \u5f02\u5e38\u5904\u7406","text":""},{"location":"SpringCloud/Sentinel/#21-web","title":"2.1 Web\u63a5\u53e3","text":""},{"location":"SpringCloud/Sentinel/#211","title":"2.1.1 \u8fd0\u884c\u6d41\u7a0b","text":"<p><code>SentinelWebInterceptor</code> \u7ee7\u627f\u81ea <code>AbstractSentinelInterceptor</code> \uff0c\u5728 <code>preHandle</code> \u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u4f7f\u7528 <code>DefaultBlockExceptionHandler</code> \u6765\u5904\u7406\u5f02\u5e38\u3002</p> <pre><code>public abstract class AbstractSentinelInterceptor implements HandlerInterceptor {\n    // ...\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n            throws Exception {\n        String resourceName = \"\";\n        try {\n            resourceName = getResourceName(request);\n            if (StringUtil.isEmpty(resourceName)) {\n                return true;\n            }\n            if (increaseReference(request, this.baseWebMvcConfig.getRequestRefName(), 1) != 1) {\n                return true;\n            }\n            // Parse the request origin using registered origin parser.\n            String origin = parseOrigin(request);\n            String contextName = getContextName(request);\n            ContextUtil.enter(contextName, origin);\n            Entry entry = SphU.entry(resourceName, ResourceTypeConstants.COMMON_WEB, EntryType.IN);\n            request.setAttribute(baseWebMvcConfig.getRequestAttributeName(), entry);\n            return true;\n        } catch (BlockException e) {\n            try {\n                handleBlockException(request, response, resourceName, e); // \u5904\u7406\u5f02\u5e38\n            } finally {\n                ContextUtil.exit();\n            }\n            return false;\n        }\n    }\n\n    // ...\n}\n</code></pre>"},{"location":"SpringCloud/Sentinel/#212-blockexceptionhandler","title":"2.1.2 \u81ea\u5b9a\u4e49 BlockExceptionHandler","text":"<pre><code>@Component\npublic class MyBlockExceptionHandler implements BlockExceptionHandler {\n    @Override\n    public void handle(HttpServletRequest request, HttpServletResponse response, String resourceName, BlockException e) throws Exception {\n        response.setContentType(\"application/json;charset=utf-8\");\n        PrintWriter writer = response.getWriter();\n\n        Result result = Result.error(500, resourceName + \":\" + e.getClass());\n\n        writer.write(JSON.toJSONString(result));\n\n        writer.flush();\n        writer.close();\n    }\n}\n</code></pre>"},{"location":"SpringCloud/Sentinel/#22-sentinelresource","title":"2.2 @SentinelResource","text":""},{"location":"SpringCloud/Sentinel/#221","title":"2.2.1 \u8fd0\u884c\u6d41\u7a0b","text":"<p>\u4f18\u5148\u8d70 <code>blockhandler</code>\uff0c<code>blockhandler</code> \u672a\u914d\u7f6e\u5219\u8d70 <code>fallback</code>\uff0c<code>fallback</code> \u672a\u914d\u7f6e\u5219\u8d70 <code>default fallback</code>\uff0c <code>default fallback</code> \u672a\u914d\u7f6e\u5219\u5411\u4e0a\u629b\u51fa\u5f02\u5e38\u3002</p> <pre><code>@Aspect\npublic class SentinelResourceAspect extends AbstractSentinelAspectSupport {\n    // \u5207\u5165\u6ce8\u89e3\n    @Pointcut(\"@annotation(com.alibaba.csp.sentinel.annotation.SentinelResource)\")\n    public void sentinelResourceAnnotationPointcut() {\n    }\n\n    @Around(\"sentinelResourceAnnotationPointcut()\")\n    public Object invokeResourceWithSentinel(ProceedingJoinPoint pjp) throws Throwable {\n        Method originMethod = resolveMethod(pjp);\n\n        SentinelResource annotation = originMethod.getAnnotation(SentinelResource.class);\n        if (annotation == null) {\n            // Should not go through here.\n            throw new IllegalStateException(\"Wrong state for SentinelResource annotation\");\n        }\n        String resourceName = getResourceName(annotation.value(), originMethod);\n        EntryType entryType = annotation.entryType();\n        int resourceType = annotation.resourceType();\n        Entry entry = null;\n        try {\n            // \u8d44\u6e90\u4fdd\u62a4\n            entry = SphU.entry(resourceName, resourceType, entryType, pjp.getArgs());\n            return pjp.proceed();\n        } catch (BlockException ex) {\n            return handleBlockException(pjp, annotation, ex);\n        } catch (Throwable ex) {\n            Class&lt;? extends Throwable&gt;[] exceptionsToIgnore = annotation.exceptionsToIgnore();\n            // The ignore list will be checked first.\n            if (exceptionsToIgnore.length &gt; 0 &amp;&amp; exceptionBelongsTo(ex, exceptionsToIgnore)) {\n                throw ex;\n            }\n            if (exceptionBelongsTo(ex, annotation.exceptionsToTrace())) {\n                traceException(ex);\n                return handleFallback(pjp, annotation, ex);\n            }\n\n            // No fallback function can handle the exception, so throw it out.\n            throw ex;\n        } finally {\n            if (entry != null) {\n                entry.exit(1, pjp.getArgs());\n            }\n        }\n    }\n}\n\nprotected Object handleBlockException(ProceedingJoinPoint pjp, SentinelResource annotation, BlockException ex)\n    throws Throwable {\n\n    // \u4f18\u5148\u8d70 blockhandler\n    Method blockHandlerMethod = extractBlockHandlerMethod(pjp, annotation.blockHandler(),\n        annotation.blockHandlerClass());\n    if (blockHandlerMethod != null) {\n        Object[] originArgs = pjp.getArgs();\n        // Construct args.\n        Object[] args = Arrays.copyOf(originArgs, originArgs.length + 1);\n        args[args.length - 1] = ex;\n        return invoke(pjp, blockHandlerMethod, args);\n    }\n\n    // \u672a\u914d\u7f6e blockhandler, \u8d70 fallback\n    return handleFallback(pjp, annotation, ex);\n}\n\nprotected Object handleFallback(ProceedingJoinPoint pjp, String fallback, String defaultFallback,\n                                Class&lt;?&gt;[] fallbackClass, Throwable ex) throws Throwable {\n    Object[] originArgs = pjp.getArgs();\n\n    // \u4f18\u5148\u8d70 fallback\n    Method fallbackMethod = extractFallbackMethod(pjp, fallback, fallbackClass);\n    if (fallbackMethod != null) {\n        // Construct args.\n        int paramCount = fallbackMethod.getParameterTypes().length;\n        Object[] args;\n        if (paramCount == originArgs.length) {\n            args = originArgs;\n        } else {\n            args = Arrays.copyOf(originArgs, originArgs.length + 1);\n            args[args.length - 1] = ex;\n        }\n\n        return invoke(pjp, fallbackMethod, args);\n    }\n\n    // \u672a\u914d\u7f6e fallback, \u8d70 default fallback\n    return handleDefaultFallback(pjp, defaultFallback, fallbackClass, ex);\n}\n\nprotected Object handleDefaultFallback(ProceedingJoinPoint pjp, String defaultFallback,\n                                       Class&lt;?&gt;[] fallbackClass, Throwable ex) throws Throwable {\n    // \u4f18\u5148\u8d70 default fallback\n    Method fallbackMethod = extractDefaultFallbackMethod(pjp, defaultFallback, fallbackClass);\n    if (fallbackMethod != null) {\n        // Construct args.\n        Object[] args = fallbackMethod.getParameterTypes().length == 0 ? new Object[0] : new Object[] {ex};\n        return invoke(pjp, fallbackMethod, args);\n    }\n\n    // \u672a\u914d\u7f6e default fallback, \u5411\u4e0a\u7ea7\u629b\u51fa\u5f02\u5e38\n    throw ex;\n}\n</code></pre>"},{"location":"SpringCloud/Sentinel/#222-blockhandler","title":"2.2.2 \u81ea\u5b9a\u4e49 blockHandler","text":"<pre><code>@SentinelResource(value = \"createOrder\", blockHandler = \"createOrderFallback\")\n@Override\npublic Order createOrder(Long productId, Long userId) {\n    Product product = productFeignClient.getProduct(productId);\n    Order order = new Order();\n    order.setId(1L);\n\n    order.setTotalAmount(product.getPrice().multiply(new BigDecimal(product.getNum())));\n    order.setUserId(userId);\n    order.setNickName(\"jack\");\n    order.setAddress(\"cn\");\n\n    order.setProductList(Arrays.asList(product));\n    return order;\n}\n\npublic Order createOrderFallback(Long productId, Long userId, BlockException exception) {\n    Order order = new Order();\n    order.setId(0L);\n    order.setTotalAmount(new BigDecimal(\"0\"));\n    order.setUserId(userId);\n    return order;\n}\n</code></pre>"},{"location":"SpringCloud/Sentinel/#23-openfeign","title":"2.3 OpenFeign \u8c03\u7528","text":"<p>\u4f7f\u7528 <code>@FeignClient</code> \u8bbe\u7f6e <code>fallback</code>\u3002</p> <pre><code>@SentinelResource(value = \"createOrder\", fallback = \"createOrderFallback\")\n@Override\npublic Order createOrder(Long productId, Long userId) {\n    Product product = productFeignClient.getProduct(productId);\n    Order order = new Order();\n    order.setId(1L);\n\n    order.setTotalAmount(product.getPrice().multiply(new BigDecimal(product.getNum())));\n    order.setUserId(userId);\n    order.setNickName(\"jack\");\n    order.setAddress(\"cn\");\n\n    order.setProductList(Arrays.asList(product));\n    return order;\n}\n\n// fallback \u4f7f\u7528 Throwable, \u5982\u679c\u4f7f\u7528 BlockException, \u4f1a\u8d70 blockHandler \u8be5\u65b9\u6cd5\u4e0d\u4f1a\u8c03\u7528\npublic Order createOrderFallback(Long productId, Long userId, Throwable exception) {\n    Order order = new Order();\n    order.setId(0L);\n    order.setTotalAmount(new BigDecimal(\"0\"));\n    order.setUserId(userId);\n    return order;\n}\n</code></pre> <pre><code>@Configuration(proxyBeanMethods = false)\n@ConditionalOnClass({ SphU.class, Feign.class })\npublic class SentinelFeignAutoConfiguration {\n\n    @Bean\n    @Scope(\"prototype\")\n    @ConditionalOnMissingBean\n    @ConditionalOnProperty(name = \"feign.sentinel.enabled\")\n    public Feign.Builder feignSentinelBuilder() {\n        return SentinelFeign.builder();\n    }\n\n}\n</code></pre> <pre><code>public final class SentinelFeign {\n\n    private static final String FEIGN_LAZY_ATTR_RESOLUTION = \"spring.cloud.openfeign.lazy-attributes-resolution\";\n\n    private SentinelFeign() {\n\n    }\n\n    public static Builder builder() {\n        return new Builder();\n    }\n\n    public static final class Builder extends Feign.Builder\n            implements ApplicationContextAware {\n\n        private Contract contract = new Contract.Default();\n\n        private ApplicationContext applicationContext;\n\n        private FeignClientFactory feignClientFactory;\n\n        @Override\n        public Feign.Builder invocationHandlerFactory(\n                InvocationHandlerFactory invocationHandlerFactory) {\n            throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Builder contract(Contract contract) {\n            this.contract = contract;\n            return this;\n        }\n\n        @Override\n        public Feign internalBuild() {\n            super.invocationHandlerFactory(new InvocationHandlerFactory() {\n                @Override\n                public InvocationHandler create(Target target,\n                        Map&lt;Method, MethodHandler&gt; dispatch) {\n                    GenericApplicationContext gctx = (GenericApplicationContext) Builder.this.applicationContext;\n                    BeanDefinition def = gctx.getBeanDefinition(target.type().getName());\n                    FeignClientFactoryBean feignClientFactoryBean;\n\n                    // If you need the attributes to be resolved lazily, set the property value to true.\n                    Boolean isLazyInit = applicationContext.getEnvironment()\n                            .getProperty(FEIGN_LAZY_ATTR_RESOLUTION, Boolean.class, false);\n                    if (isLazyInit) {\n                        /*\n                         * Due to the change of the initialization sequence,\n                         * BeanFactory.getBean will cause a circular dependency. So\n                         * FeignClientFactoryBean can only be obtained from BeanDefinition\n                         */\n                        feignClientFactoryBean = (FeignClientFactoryBean) def\n                                .getAttribute(\"feignClientsRegistrarFactoryBean\");\n                    }\n                    else {\n                        feignClientFactoryBean = (FeignClientFactoryBean) applicationContext\n                                .getBean(\"&amp;\" + target.type().getName());\n                    }\n                    Class fallback = feignClientFactoryBean.getFallback();\n                    Class fallbackFactory = feignClientFactoryBean.getFallbackFactory();\n                    String beanName = feignClientFactoryBean.getContextId();\n                    if (!StringUtils.hasText(beanName)) {\n                        beanName = (String) getFieldValue(feignClientFactoryBean, \"name\");\n                    }\n\n                    Object fallbackInstance;\n                    FallbackFactory fallbackFactoryInstance;\n                    // check fallback and fallbackFactory properties\n                    if (void.class != fallback) {\n                        fallbackInstance = getFromContext(beanName, \"fallback\", fallback,\n                                target.type());\n                        return new SentinelInvocationHandler(target, dispatch,\n                                new FallbackFactory.Default(fallbackInstance));\n                    }\n                    if (void.class != fallbackFactory) {\n                        fallbackFactoryInstance = (FallbackFactory) getFromContext(\n                                beanName, \"fallbackFactory\", fallbackFactory,\n                                FallbackFactory.class);\n                        return new SentinelInvocationHandler(target, dispatch,\n                                fallbackFactoryInstance);\n                    }\n\n                    return new SentinelInvocationHandler(target, dispatch);\n                }\n\n                private Object getFromContext(String name, String type,\n                        Class fallbackType, Class targetType) {\n                    Object fallbackInstance = feignClientFactory.getInstance(name,\n                            fallbackType);\n                    if (fallbackInstance == null) {\n                        throw new IllegalStateException(String.format(\n                                \"No %s instance of type %s found for feign client %s\",\n                                type, fallbackType, name));\n                    }\n                    // when fallback is a FactoryBean, should determine the type of instance\n                    if (fallbackInstance instanceof FactoryBean&lt;?&gt; factoryBean) {\n                        try {\n                            fallbackInstance = factoryBean.getObject();\n                        }\n                        catch (Exception e) {\n                            throw new IllegalStateException(type + \" create fail\", e);\n                        }\n                        fallbackType = fallbackInstance.getClass();\n                    }\n\n                    if (!targetType.isAssignableFrom(fallbackType)) {\n                        throw new IllegalStateException(String.format(\n                                \"Incompatible %s instance. Fallback/fallbackFactory of type %s is not assignable to %s for feign client %s\",\n                                type, fallbackType, targetType, name));\n                    }\n                    return fallbackInstance;\n                }\n            });\n\n            super.contract(new SentinelContractHolder(contract));\n            return super.internalBuild();\n        }\n\n        private Object getFieldValue(Object instance, String fieldName) {\n            Field field = ReflectionUtils.findField(instance.getClass(), fieldName);\n            field.setAccessible(true);\n            try {\n                return field.get(instance);\n            }\n            catch (IllegalAccessException e) {\n                // ignore\n            }\n            return null;\n        }\n\n        @Override\n        public void setApplicationContext(ApplicationContext applicationContext)\n                throws BeansException {\n            this.applicationContext = applicationContext;\n            feignClientFactory = this.applicationContext.getBean(FeignClientFactory.class);\n        }\n\n    }\n\n}\n</code></pre>"},{"location":"SpringCloud/Sentinel/#24-sphu","title":"2.4 SphU \u786c\u7f16\u7801","text":"<pre><code>try {\n    SphU.entry(\"resource-name\");\n    // \u4e1a\u52a1\u903b\u8f91\n} catch (BlockException e) {\n    // \u5904\u7406\u903b\u8f91\n}\n</code></pre>"},{"location":"SpringCloud/Sentinel/#3","title":"3. \u6d41\u63a7\u89c4\u5219","text":""},{"location":"SpringCloud/Sentinel/#31","title":"3.1 \u9608\u503c\u7c7b\u578b","text":"<p>QPS</p> <p>\u7edf\u8ba1\u6bcf\u79d2\u8bf7\u6c42\u6570\uff08\u6027\u80fd\u9ad8\uff09\u3002</p> <p>\u5e76\u53d1\u7ebf\u7a0b\u6570</p> <p>\u7edf\u8ba1\u5e76\u53d1\u7ebf\u7a0b\u6570\u3002</p>"},{"location":"SpringCloud/Sentinel/#32","title":"3.2 \u6d41\u63a7\u6a21\u5f0f","text":"<p>\u76f4\u63a5</p> <p>\u76f4\u63a5\u9650\u5236\u67d0\u4e2a\u8d44\u6e90\u7684\u8bf7\u6c42\u3002</p> <p>\u94fe\u8def</p> <p>\u9650\u5236\u67d0\u4e2a\u8d44\u6e90\u6307\u5b9a\u94fe\u8def\u8fc7\u6765\u7684\u8bf7\u6c42\uff08\u9650\u5236\u4e0a\u6e38\uff09\uff0c\u6ce8\u610f\u5173\u95ed\u4e0a\u4e0b\u6587\u7edf\u4e00 <code>web-context-unify</code> \u3002</p> <p>\u5173\u8054</p> <p>\u76d1\u542c\u67d0\u4e2a\u8d44\u6e90\u5173\u8054\u7684\u8bf7\u6c42\uff0c\u5173\u8054\u8bf7\u6c42\u8f83\u5927\u65f6\uff0c\u9650\u5236\u81ea\u8eab\u7684\u8bf7\u6c42\u3002</p>"},{"location":"SpringCloud/Sentinel/#33","title":"3.3 \u6d41\u63a7\u6548\u679c","text":"<p>\u5feb\u901f\u5931\u8d25</p> <p>\u8d85\u8fc7\u9608\u503c\u7acb\u5373\u62d2\u7edd\u8bf7\u6c42\u3002</p> <p>Warm Up</p> <p>\u542f\u52a8\u65f6\u9010\u6b65\u589e\u52a0\u6d41\u91cf\u9608\u503c\u3002</p> <p>\u6392\u961f\u7b49\u5f85</p> <p>\u4ee5 ms \u4e3a\u5355\u4f4d\uff0c\u7cbe\u5ea6\u4e0d\u652f\u6301 QPS &gt; 1000\uff0c\u63a7\u5236\u8bf7\u6c42\u4ee5\u56fa\u5b9a\u901f\u7387\u901a\u8fc7\uff0c\u591a\u4f59\u7684\u8bf7\u6c42\u4f1a\u6392\u961f\u7b49\u5f85\uff0c\u8d85\u51fa\u7b49\u5f85\u65f6\u95f4\u88ab\u4e22\u5f03\u3002</p>"},{"location":"SpringCloud/Sentinel/#4","title":"4. \u7194\u65ad\u89c4\u5219","text":"<p>best practice: \u7194\u65ad\u964d\u7ea7\u4f5c\u4e3a\u4fdd\u62a4\u81ea\u8eab\u7684\u624b\u6bb5\uff0c\u901a\u5e38\u5728\u5ba2\u6237\u7aef\uff08\u8c03\u7528\u7aef\uff09\u8fdb\u884c\u914d\u7f6e\u3002 </p> <p></p>"},{"location":"SpringCloud/Sentinel/#41","title":"4.1 \u7194\u65ad\u7b56\u7565","text":"<p>\u6162\u8c03\u7528\u6bd4\u4f8b</p> <p>\u7edf\u8ba1\u65f6\u95f4\u7a97\u53e3\u6162\u8c03\u7528\u6bd4\u4f8b\uff0c\u8d85\u8fc7\u8bbe\u5b9a\u7684\u9608\u503c\u89e6\u53d1\u7194\u65ad</p> <p>\u5f02\u5e38\u6bd4\u4f8b</p> <p>\u7edf\u8ba1\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u8bf7\u6c42\u5f02\u5e38\u6bd4\u4f8b</p> <p>\u5e38\u51fd\u6570</p> <p>\u7edf\u8ba1\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u5f02\u5e38\u8bf7\u6c42\u6570</p>"},{"location":"SpringCloud/Sentinel/#5","title":"5. \u70ed\u70b9\u89c4\u5219","text":""}]}